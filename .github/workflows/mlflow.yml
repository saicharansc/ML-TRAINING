name: Train Loan Model with MLFLow

permissions:
  contents: write

on:
  push:
    branches: [main]

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # MLflow has the best support on Python 3.11; if you must use 3.13, change this.
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          cd 05_Session_Demo
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model
        run: |
          cd 05_Session_Demo
          python train.py

      # Show metrics + MLflow run info in the Actions "Summary" tab
      - name: Publish evaluation to job summary
        if: always()
        run: |
          echo "## Model Metrics" >> "$GITHUB_STEP_SUMMARY"
          if [ -f "05_Session_Demo/reports/report.md" ]; then
            echo "" >> "$GITHUB_STEP_SUMMARY"
            cat "05_Session_Demo/reports/report.md" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "_No report found at 05_Session_Demo/reports/report.md_" >> "$GITHUB_STEP_SUMMARY"
          fi
          if [ -f "05_Session_Demo/reports/mlflow_run.txt" ]; then
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "## MLflow" >> "$GITHUB_STEP_SUMMARY"
            cat "05_Session_Demo/reports/mlflow_run.txt" >> "$GITHUB_STEP_SUMMARY"
          fi

      # Upload the full reports folder (Markdown + JSON + confusion matrix + MLflow info)
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: loan-model-reports
          path: 05_Session_Demo/reports/**
          if-no-files-found: warn

      # Upload the entire MLflow tracking directory so runs/artifacts are downloadable
      - name: Upload MLflow runs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: 05_Session_Demo/mlruns/**
          if-no-files-found: warn

      - name: Generate tag
        id: version
        run: |
          # Safe, sortable tag (YYYYmmddHHMMSS)
          VERSION="v$(date +%Y%m%d%H%M%S)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Upload main pickled model that the script writes to 05_Session_Demo/model.pkl
      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: loan-model
          path: 05_Session_Demo/model.pkl
          if-no-files-found: error

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          body: "Automated release"

      - name: Zip model files
        run: zip -j models.zip 05_Session_Demo/models/*.pkl

      - name: Upload zipped model to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: models.zip
          asset_name: models.zip
          asset_content_type: application/zip
